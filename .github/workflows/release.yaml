# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Release"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 1 * *" # 1st of every month at midnight UTC

jobs:
  release:
    name: "Build, Push, and Release"
    runs-on: ubuntu-latest
    permissions:
      contents: write   # To create releases and tags
      packages: write   # To push images to GHCR
    outputs:
      release_tag: ${{ steps.determine-next-tag.outputs.result }}
    steps:
      - name: "Get Previous Release Tag and Determine Next Tag"
        id: determine-next-tag
        uses: actions/github-script@v7
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          result-encoding: string
          script: |
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1,
            });
            let previousTag = "0.0.0";
            if (releases.length > 0) {
              previousTag = releases[0].tag_name;
            }
            const [previousMajor, previousMinor, previousPatch] = previousTag.split('.').map(Number);
            const currentYear = new Date().getFullYear();
            const currentMonth = new Date().getMonth() + 1;
            const nextMajorMinor = `${currentYear}.${currentMonth}`;
            let nextPatch;
            if (`${previousMajor}.${previousMinor}` === nextMajorMinor) {
              nextPatch = previousPatch + 1;
            } else {
              nextPatch = 0;
            }
            return `${nextMajorMinor}.${nextPatch}`;

      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v3

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "Login to Docker Hub"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build and push Docker image"
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ajaykumar4/gitops-tools:${{ steps.determine-next-tag.outputs.result }}
            ghcr.io/ajaykumar4/gitops-tools:${{ steps.determine-next-tag.outputs.result }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: "Create GitHub Release and Tag"
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          tag: ${{ steps.determine-next-tag.outputs.result }}
          token: "${{ secrets.GITHUB_TOKEN }}"

  update-readme:
    name: Update README with new image tag
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write   # To create releases and tags

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update image version in README.md
        run: |
          sed -i -E "s|(image: ajaykumar4/gitops-tools:)[0-9a-zA-Z.+-]+|\1${{ needs.release.outputs.release_tag }}|g" README.md

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: "chore: update image tag to ${{ needs.release.outputs.release_tag }}"
          file_pattern: README.md
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        